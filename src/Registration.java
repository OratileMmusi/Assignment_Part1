/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.JOptionPane;
import javax.swing.JOptionPane;

/**
 *
 * @author orati
 */
public class Registration extends javax.swing.JFrame {
    String storedUsername;
    String storedPassword;

    /**
     * Creates new form Registration
     */
    public Registration() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        srsUsername = new javax.swing.JTextField();
        srsFirstname = new javax.swing.JTextField();
        srsLastname = new javax.swing.JTextField();
        srsPassword = new javax.swing.JTextField();
        srUsername = new javax.swing.JTextField();
        srFirstname = new javax.swing.JTextField();
        srLastname = new javax.swing.JTextField();
        srSubmit = new javax.swing.JButton();
        srPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        srsUsername.setText("Username");
        srsUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srsUsernameActionPerformed(evt);
            }
        });

        srsFirstname.setText("First name");

        srsLastname.setText("Last name");

        srsPassword.setText("Password");
        srsPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srsPasswordActionPerformed(evt);
            }
        });

        srUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srUsernameActionPerformed(evt);
            }
        });

        srSubmit.setText("Submit");
        srSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srSubmitActionPerformed(evt);
            }
        });

        srPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(srsLastname, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(srLastname, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(srsFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(srFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(srsUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(srUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(srsPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(srPassword))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(srSubmit)))
                .addContainerGap(170, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srsUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(srUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srsFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(srFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srsLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(srLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srsPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(srPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(srSubmit)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void srsPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srsPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_srsPasswordActionPerformed

    private void srUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_srUsernameActionPerformed

    private void srPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_srPasswordActionPerformed

    private void srSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srSubmitActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
         // TODO add your handling code here:
            String username = srUsername.getText();
        String firstname = srFirstname.getText();
        String lastname = srLastname.getText();
        String password = new String(srPassword.getPassword());
        // Check username and complexiy
        
        String registrationMessage = registerUser(username, firstname, lastname, password);
        
        JOptionPane.showMessageDialog(Registration.this, registrationMessage, "Registration Status",
        JOptionPane.INFORMATION_MESSAGE);
        
        if (registrationMessage.equals("Registration successful")){
           
        }
        System.out.println("Username" + username);
        System.out.println("Password" + password);
        
        dispose(); 
        System.out.println("Stored username:" + username + " "+ "Stored password"+ password);
    }//GEN-LAST:event_srSubmitActionPerformed

    private void srsUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srsUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_srsUsernameActionPerformed
private String registerUser(String username, String firstname, String lastname, String password)
    {
        //Check username and password complexity
        if (!checkUserName(username))
        {
           return "Username must contain an underscore (_) and be no more than 5 characters long!"; 
        }
        if (!checkPasswordComplexity(password)) {
            return "Password must be at least 8 characters long and contain at least one uppercase letter, "
                    + "one lowercase letter, and one digit, and special character";
        }
        
        return "Registration successful";
    }
    
    private boolean checkUserName(String username)
    {
        return username.contains("_") && username.length() <= 5; 
    }
    
    private boolean checkPasswordComplexity(String password)
    {
        return password.length() >= 8
                && password.matches(".*[A-Z].*")
                && password.matches(".*[a-z].*")
                && password.matches(".*\\d.*")
                && password.matches(".*[!@#$%^&*()-_=+\\|[{]};:'\",<.>/?`~].*");
    }
    
      public void storeLoginCredentials(String username, String password) {
        // Store login credentials
        storedUsername = username;
        storedPassword = password;
    }
      
       public boolean checkLoginCredentials(String username, String password) {
        return username.equals(storedUsername) && password.equals(storedPassword);
    }



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField srFirstname;
    private javax.swing.JTextField srLastname;
    private javax.swing.JPasswordField srPassword;
    private javax.swing.JButton srSubmit;
    private javax.swing.JTextField srUsername;
    private javax.swing.JTextField srsFirstname;
    private javax.swing.JTextField srsLastname;
    private javax.swing.JTextField srsPassword;
    private javax.swing.JTextField srsUsername;
    // End of variables declaration//GEN-END:variables

    boolean checkCredentials(String username, String Password) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

}